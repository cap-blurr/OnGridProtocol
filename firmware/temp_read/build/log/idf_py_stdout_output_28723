[1/11] Linking C static library esp-idf/espressif__ds18b20/libespressif__ds18b20.a
[2/11] Performing build step for 'bootloader'
[1/1] cd /Users/dreybuilds/Documents/Personal_Projects/OnGrid/OnGridProtocol/firmware/temp_read/build/bootloader/esp-idf/esptool_py && /Users/dreybuilds/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/dreybuilds/esp/v5.4/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/dreybuilds/Documents/Personal_Projects/OnGrid/OnGridProtocol/firmware/temp_read/build/bootloader/bootloader.bin
Bootloader binary size 0x6560 bytes. 0xaa0 bytes (9%) free.
[3/11] No install step for 'bootloader'
[4/11] Completed 'bootloader'
[5/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/temp_read.c.obj
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Generating ld/sections.ld
[8/11] Building C object CMakeFiles/temp_read.elf.dir/project_elf_src_esp32.c.obj
[9/11] Linking CXX executable temp_read.elf
[10/11] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/dreybuilds/Documents/Personal_Projects/OnGrid/OnGridProtocol/firmware/temp_read/build/temp_read.bin
[11/11] cd /Users/dreybuilds/Documents/Personal_Projects/OnGrid/OnGridProtocol/firmware/temp_read/build/esp-idf/esptool_py && /Users/dreybuilds/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/dreybuilds/esp/v5.4/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/dreybuilds/Documents/Personal_Projects/OnGrid/OnGridProtocol/firmware/temp_read/build/partition_table/partition-table.bin /Users/dreybuilds/Documents/Personal_Projects/OnGrid/OnGridProtocol/firmware/temp_read/build/temp_read.bin
temp_read.bin binary size 0x328e0 bytes. Smallest app partition is 0x100000 bytes. 0xcd720 bytes (80%) free.
